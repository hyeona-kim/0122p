<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ict.project.mapper.TraineeMapper">

<resultMap type="com.ict.project.vo.TraineeVO" id="map1">
	<association property="cvo" column="c_idx" javaType="com.ict.project.vo.CourseVO" select="course"></association>
</resultMap>
	
<resultMap type="com.ict.project.vo.CourseVO" id="map2">
	<association property="ctvo" column="ct_idx" javaType="com.ict.project.vo.CourseTypeVO" select="courseType"></association>
</resultMap>

<select id="all" resultMap="map1">
	select * from trainee_t
</select>

<select id="count" resultType="int">
		select count(*) from trainee_t
    where status = 0
</select>

 <select id="list" resultType="com.ict.project.vo.TraineeVO">
		select * from trainee_t
		where status = 0
</select>

<select id="view" parameterType="String" resultType="com.ict.project.vo.TraineeVO">
	select * from trainee_t
	where tr_idx = #{tr_idx} 
</select>

<update id="trainedit" parameterType="String">
	update trainee_t
	<set>
		tr_name = #{tr_name},
		tr_rrn = #{tr_rrn},
		tr_phone = #{tr_phone},
		tr_hp = #{tr_hp},
		<if test="tr_cancel_date != null">tr_cancel_date = #{tr_cancel_date},</if>
		<if test="tr_cancel_text != null">tr_cancel_text = #{tr_cancel_text},</if>
		<if test="tr_hrd != null">tr_hrd = #{tr_hrd},</if>
		<if test="tr_refund != null">tr_refund = #{tr_refund},</if>
		<if test="tr_bc != null">tr_bc = #{tr_bc},</if>
		<if test="tr_charge != null">tr_charge = #{tr_charge},</if>
		<if test="tr_total_fee != null">tr_total_fee = #{tr_total_fee},</if>
		<if test="tr_card != null">tr_card = #{tr_card},</if>
		<if test="tr_pos_code !=null">tr_pos_code = #{tr_pos_code},</if>
		<if test="tr_addr != null">tr_addr = #{tr_addr},</if>
		t_path = #{t_path},
		file_name = #{file_name},
		ori_name = #{ori_name}
	</set>
	where tr_idx = #{tr_idx}
</update>

<select id="getcard" resultType="com.ict.project.vo.TraineeVO">
	select * from trainee_t order by tr_idx
</select>

<!-- 훈련생현황에서 교육생 삭제할때 쓰임 -->
<update id="del" parameterType="String">
	update trainee_t
	set status = 1
	where tr_idx = #{tr_idx} and c_idx = #{c_idx}

</update>

<select id="clist" resultType="com.ict.project.vo.TraineeVO" parameterType="String">
	select * from trainee_t
	where status = 0 and c_idx = #{c_idx} order by tr_idx
</select>

<select id="tlist" resultType="com.ict.project.vo.TraineeVO" parameterType="String">
	select * from trainee_t
	where tr_idx = #{tr_idx} and c_idx = #{c_idx}
</select>

<update id="nowstatus" parameterType="String">
	update trainee_t
	set tr_nowstatus = #{tr_nowstatus}
	where tr_idx = #{tr_idx}
</update>

<update id="etcedit" parameterType="Map">
	update trainee_t
	set tr_etc = #{tr_etc}, tr_memo = #{tr_memo}
	where tr_idx = #{tr_idx}
</update>

<select id="course_count" parameterType="String" resultType="int">
	select count(*) from trainee_t where c_idx = #{c_idx} and status = 0
</select>

<select id="search_count" parameterType="Map" resultType="int">
	select count(*) 
				from 
				(select @RN:=@RN+1 as rnum, a.* 
				from (select t.* from trainee_t t, course_t c
					<where>
						<trim suffixOverrides="and">
								t.status = 0 and t.c_idx = c.c_idx and
								<if test="select !=null and select == 4">tr_name like concat('%', #{value}, '%') and</if>
								<if test="year !=null">start_date like concat(#{year},'%') and</if>
						</trim>
					</where>
				)a ,(select @RN:=0) b) c 
</select>

<select id="searchValue_count" parameterType="Map" resultType="int">
	select count(*) 
				from 
				(select @RN:=@RN+1 as rnum, a.* 
				from (select t.* from trainee_t t, course_t c
					<where>
						<trim suffixOverrides="and">
								t.status = 0 and t.c_idx = c.c_idx and t.c_idx = #{c_idx} and
								<if test="select !=null and select == 4">tr_name like concat('%', #{value}, '%') and</if>
								<if test="year !=null">start_date like concat(#{year},'%') and</if>
						</trim>
					</where>
				)a ,(select @RN:=0) b) c 
</select>

<select id="course_searchValue" parameterType="Map" resultMap="map1">
	select * 
			from 
			(select @RN:=@RN+1 as rnum, a.* 
			from (select t.* from trainee_t t, course_t c
				<where>
					<trim suffixOverrides="and">
						    t.status = 0 and t.c_idx = c.c_idx and t.c_idx = #{c_idx} and
							<if test="select !=null and select == 4">tr_name like concat('%', #{value}, '%') and</if>
							<if test="year !=null">start_date like concat(#{year},'%') and</if>
					</trim>
				</where>
				order by tr_idx desc
			)a ,(select @RN:=0) b) c 
			where c.rnum between #{begin} and #{end}
</select>

<select id="course_search" parameterType="Map" resultMap="map1">
	select * 
			from 
			(select @RN:=@RN+1 as rnum, a.* 
			from (select t.* from trainee_t t, course_t c
				<where>
					<trim suffixOverrides="and">
						    t.status = 0 and t.c_idx = c.c_idx and
							<if test="select !=null and select == 4">tr_name like concat('%', #{value}, '%') and</if>
							<if test="year !=null">start_date like concat(#{year},'%') and</if>
					</trim>
				</where>
				order by tr_idx desc
			)a ,(select @RN:=0) b) c 
			where c.rnum between #{begin} and #{end}
</select>

<select id="course" resultMap="map2" parameterType="String">
	select * from course_t where c_idx = #{c_idx}
</select>
<select id="course_list" parameterType="Map" resultMap="map1">
	select * 
		from 
		(select @RN:=@RN+1 as rnum, a.* from 
		(select * from trainee_t t WHERE t.status = 0 and t.c_idx= #{c_idx} order by tr_idx desc)a ,(select @RN:=0) b) c 
		where c.rnum between #{begin} and #{end}
</select>

<update id="counsel_date" parameterType="Map">
	update trainee_t set ss_end = #{ss_end} , ss_num = #{ss_num}
	where tr_idx = #{tr_idx}
</update>

<!--ge-->
<select id="traineeReg_count" parameterType="Map" resultType="int">
	select count(*) 
	from 
	(select @RN:=@RN+1 as rnum, a.* 
	from (select t.* from trainee_t t, course_t c
		<where>
			<trim suffixOverrides="and">
				t.status = 0 and t.c_idx = c.c_idx and
				<if test="c_idx != null">c.c_idx=#{c_idx} and</if>
				<if test="year != null">c.start_date like concat(#{year},'%') and</if>
				<if test="ct_idx != null">c.ct_idx=#{ct_idx} and</if>
				<if test="select != null and select == 0">t.tr_name like concat ('%',#{value},'%') and</if>
				<if test="select != null and select == 1">t.tr_hp like concat ('%',#{value},'%') and</if>
				<if test="select != null and select == 2">t.tr_phone like concat ('%',#{value},'%') and </if>
				<if test="select != null and select == 3">t.memo like concat ('%',#{value},'%') and</if>
			</trim>
		</where>
		order by tr_idx desc
	)a ,(select @RN:=0) b) c 
</select>
<select id="traineeReg" parameterType="Map" resultMap="map1">
	select * 
	from 
	(select @RN:=@RN+1 as rnum, a.* 
	from (select t.* from trainee_t t, course_t c
		<where>
			<trim suffixOverrides="and">
				t.status = 0 and t.c_idx = c.c_idx and
				<if test="c_idx != null">c.c_idx=#{c_idx} and</if>
				<if test="year != null">c.start_date like concat(#{year},'%') and</if>
				<if test="ct_idx != null">c.ct_idx=#{ct_idx} and</if>
				<if test="select != null and select == 0">t.tr_name like concat ('%',#{value},'%') and</if>
				<if test="select != null and select == 1">t.tr_hp like concat ('%',#{value},'%') and</if>
				<if test="select != null and select == 2">t.tr_phone like concat ('%',#{value},'%') and </if>
				<if test="select != null and select == 3">t.memo like concat ('%',#{value},'%') and</if>
			</trim>
		</where>
		order by tr_idx desc
	)a ,(select @RN:=0) b) c 
	where c.rnum between #{begin} and #{end}
</select>

<select id="courseType" resultType="com.ict.project.vo.CourseTypeVO" parameterType="String">
	select * from course_type_t where ct_idx=#{ct_idx}
</select>
<!-- //성명	주민번호	연락처	전화	우편번호	주소	훈련과정명(코드값)	수강상태	전체교육비	상담메모	카드유형-->
<insert id="add" parameterType="Map">
     INSERT INTO trainee_t (tr_name, tr_rrn, tr_hp, tr_phone, tr_pos_code,tr_addr, c_idx, tr_nowstatus, tr_total_fee, tr_memo, tr_card,status)
     VALUES 
     <foreach collection="list" item="vo" separator=",">
     (#{vo.tr_name}, #{vo.tr_rrn}, #{vo.tr_hp}, #{vo.tr_phone}, #{vo.tr_pos_code},#{vo.tr_addr} ,#{vo.c_idx}, #{vo.tr_nowstatus}, #{vo.tr_total_fee}, #{vo.tr_memo}, #{vo.tr_card},0)
    </foreach>
</insert>

 <select id="getEs" parameterType="String" resultType="com.ict.project.vo.TraineeVO">
		select * from trainee_t
		where status = 0 and es_idx = #{es_idx}
</select>

<select id="follwup" parameterType="Map" resultMap="map1">
	select * 
			from 
			(select @RN:=@RN+1 as rnum, a.* 
			from (select t.* from trainee_t t, course_t c
				<where>
					<trim suffixOverrides="and">
						    t.status = 0 and t.c_idx = c.c_idx and
							<if test="select !=null and select == 3">c_name like concat('%', #{value}, '%') and</if>
							<if test="select !=null and select == 4">tr_name like concat('%', #{value}, '%') and</if>
					</trim>
				</where>
				order by tr_idx desc
			)a ,(select @RN:=0) b) c 
			where c.rnum between #{begin} and #{end}
</select>


<select id="follwupcount" parameterType="Map" resultType="int">
	select count(*) 
			from 
			(select @RN:=@RN+1 as rnum, a.* 
			from (select t.* from trainee_t t, course_t c
				<where>
					<trim suffixOverrides="and">
						    t.status = 0 and t.c_idx = c.c_idx and
							<if test="select !=null and select == 3">c_name like concat('%', #{value}, '%') and</if>
							<if test="select !=null and select == 4">tr_name like concat('%', #{value}, '%') and</if>
					</trim>
				</where>
				order by tr_idx desc
			)a ,(select @RN:=0) b) c 
</select>



</mapper>